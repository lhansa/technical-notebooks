{
  "hash": "4ce4461c21041c21c1e31aaf69b79810",
  "result": {
    "markdown": "---\ntitle: \"Advent of code (2)\"\ndescription: \"Ejercicio 2 de Advent of code 2023\"\ndescription-meta: \"Ejercicio 2 de Advent of code 2023\"\nauthor: \"Leonardo Hansa\"\ndate: \"2023-12-02\"\ncategories: [datos]\nexecute: \n  echo: true\nfreeze: auto\n---\n\n\nSegundo ejercicio de [Advent of Code](https://adventofcode.com/) de 2023. Voy con retraso, lo sé.\n\n\n## Parte 1\n\nMi propuesta con R base: \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_cubes <- list(red = 12, green = 13, blue = 14)\ndata <- readLines(\"2023-02.txt\")\n\ndata[1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Game 1: 12 red, 2 green, 5 blue; 9 red, 6 green, 4 blue; 10 red, 2 green, 5 blue; 8 blue, 9 red\"\n[2] \"Game 2: 3 green, 7 red; 3 blue, 5 red; 2 green, 1 blue, 6 red; 3 green, 2 red, 3 blue\"          \n[3] \"Game 3: 12 red, 18 blue, 3 green; 14 red, 4 blue, 2 green; 4 green, 15 red\"                     \n[4] \"Game 4: 14 blue, 8 red, 10 green; 7 green, 9 blue, 4 red; 4 green, 5 red\"                       \n[5] \"Game 5: 2 red, 1 blue, 4 green; 1 blue, 1 red, 5 green; 6 green, 3 red; 10 blue, 4 green, 1 red\"\n```\n:::\n:::\n\n\n\nPara cada juego (o sea, cada elemento en `data`) tengo que comprobar si las extracciones son posibles dada la cantidad de cubos original mencionada: 12 rojos, 13 verdes y 14 azules.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalidate_game <- function(fila, .total_cubes = total_cubes){\n  fila <- gsub(\"Game [0-9]+: \", \"\", fila)\n  fila <- gsub(\" \", \"\", fila)\n  \n  is_valid_extract <- vapply(\n    strsplit(fila, \";\")[[1]], \n    validate_extract, \n    logical(1)\n  )\n \n  all(is_valid_extract)\n\n}\n\nvalidate_extract <- function(x, .total_cubes = total_cubes) {\n  lgl_out <- vapply(\n    c(\"blue\", \"green\", \"red\"),\n    function(color, text = x) {\n      # Extract with regex the number preceding word blue\n      pattern <- sprintf(\"[0-9]+(?=%s)\", color)\n      count_txt <- regmatches(text, m = regexpr(pattern, text, perl = TRUE))\n      if (length(count_txt) == 0) {\n        return(TRUE)\n      } else  {\n        count <- as.numeric(count_txt)\n        return(count <= total_cubes[[color]]  )\n      }\n      \n    }, \n    logical(1)\n  )\n  \n  all(lgl_out)\n}\n\nvalid_games <- vapply(\n  data, \n  validate_game, \n  logical(1)\n)\n\n# Count IDs of valid games\nsum(which(valid_games))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2600\n```\n:::\n:::\n\n\n## Parte 2\n\nDebería poner los enunciados aquí... pero paso. \n\nMi propuesta para la parte 2, siempre con R base:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_power_game <- function(fila){\n  fila <- gsub(\"Game [0-9]+: \", \"\", fila)\n  fila <- gsub(\" \", \"\", fila)\n  \n  color_counts <- vapply(\n    c(\"blue\", \"green\", \"red\"),\n    function(color) {\n      pattern <- sprintf(\"[0-9]+(?=%s)\", color)\n      color_count <- regmatches(fila, m = gregexpr(pattern, fila, perl = TRUE))[[1]]\n      color_count <- as.numeric(color_count)\n      max(color_count)    \n    }, \n    numeric(1)\n  )\n  \n  Reduce(`*`, color_counts)\n\n}\n\ngame_powers <- vapply(\n  data, \n  compute_power_game, \n  numeric(1)\n)\n\n# part 2 solution\nsum(game_powers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 86036\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}