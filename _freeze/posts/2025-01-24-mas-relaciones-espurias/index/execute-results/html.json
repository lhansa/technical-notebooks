{
  "hash": "0bb754e246c98c9c03515e5c1e0a874e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Otro experimento con relaciones espurias\"\ndescription: \"Ejercicio con variables espurias y regresión\"\ndescription-meta: \"Ejercicio con variables espurias y regresión\"\nauthor: \"Leonardo Hansa\"\ndate: \"2025-01-24\"\ncategories: [datos]\nexecute: \n  echo: true\n  message: false\n  warning: false\nfreeze: true\n---\n\n\n\n## Datos y planteamiento\n\nTienes una variable $x_{real}$ que genera dos variables: $y$ y $x_{spur}$. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rethinking)\nlibrary(ggplot2)\n\nn_data <- 100\nx_real <- rnorm(n_data)\nx_spur <- rnorm(n_data, x_real)\ny  <- rnorm(n_data, x_real)\n\ndf <- data.frame(y, x_real, x_spur)\n\nggplot(df) + \n  geom_histogram(aes(x_spur), fill = \"#800080\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/libs-and-data-1.png){width=672}\n:::\n:::\n\n\n\nComo la relación entre $x_{real}$ y $x_{spur}$ es alta, $x_{spur}$ parece tener una relación con $y$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df) + \n  geom_point(aes(x_spur, y)) + \n  geom_smooth(aes(x_spur, y), method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){width=672}\n:::\n:::\n\n\n\nPero $y$ por definición depende únicamente de $x_{real}$, por lo que la relación entre $x_{spur}$ y $y$ es espuria.\n\n## Regresiones\n\nLa regresión que se ajusta según la definición sería:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_real <- quap(\n  alist(\n    y ~ dnorm(mu, sigma), \n    mu <- a + b * x_real, \n    a ~ dnorm(0, 0.2), \n    b ~ dnorm(0, 0.5),\n    sigma ~ dexp(1)\n  ), \n  data = df\n)\n\nprecis(fit_real)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           mean         sd        5.5%     94.5%\na     0.1033248 0.08852148 -0.03814959 0.2447993\nb     0.8891497 0.09753880  0.73326381 1.0450355\nsigma 0.9855336 0.06929995  0.87477895 1.0962884\n```\n\n\n:::\n:::\n\n\n\nSi intentas ajustar una regresión que incluya a la variable espuria, el modelo te la rechazará.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- quap(\n    alist(\n        y ~ dnorm(mu, sigma), \n        mu <- a + b_spur * x_spur + b_real * x_real, \n        a ~ dnorm(0, 0.2),\n        b_spur ~ dnorm(0, 0.5),\n        b_real ~ dnorm(0, 0.5),\n        sigma ~ dexp(1)\n    ), \n    data = df\n)\n\nprecis(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            mean         sd        5.5%     94.5%\na      0.1046021 0.08805048 -0.03611955 0.2453238\nb_spur 0.1343157 0.08945600 -0.00865227 0.2772837\nb_real 0.7392645 0.13943163  0.51642586 0.9621032\nsigma  0.9790066 0.06886007  0.86895487 1.0890582\n```\n\n\n:::\n:::\n\n\n\nSi no quieres hacerlo bayesiano:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_lm <- lm(y ~ x_spur + x_real, data = df)\nsummary(fit_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = y ~ x_spur + x_real, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.7013 -0.6812 -0.1133  0.6213  2.9315 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.13080    0.09987   1.310    0.193    \nx_spur       0.10942    0.09466   1.156    0.251    \nx_real       0.79813    0.14911   5.353  5.8e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9977 on 97 degrees of freedom\nMultiple R-squared:  0.4699,\tAdjusted R-squared:  0.459 \nF-statistic:    43 on 2 and 97 DF,  p-value: 4.264e-14\n```\n\n\n:::\n:::\n\n\n\nOtra opción sería que sí usaras la variable espuria pero no la real:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_spur <- quap(\n  alist(\n    y ~ dnorm(mu, sigma), \n    mu <- a + b * x_spur, \n    a ~ dnorm(0, 0.2),\n    b ~ dnorm(0, 0.5),\n    sigma ~ dexp(1)\n  ), \n  data = df\n)\n\nprecis(fit_spur)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            mean         sd        5.5%     94.5%\na     0.08931005 0.09733337 -0.06624748 0.2448676\nb     0.47324510 0.07049634  0.36057833 0.5859119\nsigma 1.11271375 0.07808541  0.98791817 1.2375093\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}