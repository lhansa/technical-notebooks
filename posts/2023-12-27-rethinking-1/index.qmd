---
title: "Statistical Rethinking (1)"
description: "Introducción de métodos generativos en estadística bayesiana, basados en el libro Statistical Rethinking de Richard McElreath"
description-meta: "Introducción de métodos generativos en estadística bayesiana, basados en el libro Statistical Rethinking de Richard McElreath"
author: "Leonardo Hansa"
date: "2023-12-27"
categories: [datos]
execute: 
  echo: true
freeze: auto
---

En [Statistical Rethinking](https://xcelab.net/rm/statistical-rethinking/) Richard McEalreath presenta los métodos generativos en estadística bayesiana. 

## Introducción

El problema que plantea es el de estimar la proporción de agua que hay en la Tierra. 

El procedimiento consiste en mirar en varios puntos de la Tierra y ver si hay agua o tierra. De esa forma obtienes una secuencia de valores: `"A", "A", "T", "A", "T", ...` y usas esos datos para estimar la proporción real. 

Concretamente, en 9 observaciones has obtenido 6 porciones de agua.

Hay tres formas de ajustar un modelo estadístico. Las ejemplificaremos con ese problema de la proporción de agua. 

Los códigos serán los del libro.


## Mallado

La primera forma de ajustar un modelo estadístico es mediante mallado. Computacionalmente es costoso pero es más educativo que el resto de métodos. 

Lo que vas a hacer es proponer unos posibles valores para el parámetro que buscas (la proporción de agua) y les das una distribución a priori a estos valores (no pasa nada ahora por que la distribución a priori no sume 1 porque luego estandarizarás el resultado final).  


```{r}
#| label: mallado-priors

grid_size <- 20
# define grid
p_grid <- seq(from = 0, to = 1, length.out = grid_size)
# define prior
prior <- rep(1 , grid_size)
```

Tus priori (20 proporciones equiprobables) ya están definidas y ahora te sirven para generar posibles escenarios. La idea es ver la verosimilitud de tus datos observados ante los distintos posibles valores del parámetro. 

```{r}
#| label: mallado-likelihood
likelihood <- dbinom(6, size = 9, prob = p_grid)
likelihood
```

Ahora calculas la posteriori, ponderando estas verosimilitudes por los prioris que tenías antes. Como los prioris no seguían una distribución de probabilidad, te toca estandarizar el resultado.

```{r}
#| label: mallado-posterior
unstd_posterior <- likelihood * prior
posterior <- unstd_posterior / sum(unstd_posterior)
posterior
```


```{r}
#| label: mallado-plot
plot(p_grid, posterior, type = "b",
     xlab = "Probabidad de agua" , 
     ylab = "Posteriori")
mtext("20 puntos")
```

Ahora bien, ten en cuenta que **los prioris forman parte del modelo**. Deberías tener un criterio para elegir unos u otros. 

Los puedes cambiar y los resultados se verán afectados. 

```{r}
p_grid <- seq(0, 1, length.out = grid_size)
prior <- exp(-5 * abs(p_grid - 0.5))

likelihood = dbinom(6, 9, prob = p_grid)

unstd_posterior <-  likelihood * prior
posterior <- unstd_posterior / sum(unstd_posterior)

plot(p_grid, posterior, type = "b",
     xlab = "Probabidad de agua" , 
     ylab = "Posteriori")
mtext(sprintf("%i puntos", grid_size))
```

